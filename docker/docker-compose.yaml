version: '3.8'

services:
  # H2 Database service
  h2-database:
    image: oscarfonts/h2
    container_name: h2-database
    ports:
      - "8082:81"    # Interface web H2
      - "1521:1521"  # Port TCP pour les connexions JDBC
    environment:
      - H2_OPTIONS=-ifNotExists
    volumes:
      - h2-data:/opt/h2-data
      - ./schema.sql:/opt/h2-data/schema.sql
      - ./data.sql:/opt/h2-data/data.sql
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "echo", "1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Inventory Controller service
  inventory-controller:
    build:
      context: ../inventory-controller
      dockerfile: docker/Dockerfile
    container_name: inventory-controller
    ports:
      - "8083:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Store Search Controller service
  storesearch-controller:
    build:
      context: ../storesearch-controller
      dockerfile: docker/Dockerfile
    container_name: storesearch-controller
    ports:
      - "8084:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Payment Service
  payment-service:
    build:
      context: ../payment-service
      dockerfile: docker/Dockerfile
    container_name: payment-service
    ports:
      - "8085:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Shipping Price Controller
  shippingprice-controller:
    build:
      context: ../shippingprice-controller
      dockerfile: docker/Dockerfile
    container_name: shippingprice-controller
    ports:
      - "8086:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Order Controller
  order-controller:
    build:
      context: ../order-controller
      dockerfile: docker/Dockerfile
    container_name: order-controller
    ports:
      - "8087:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Product Controller
  product-controller:
    build:
      context: ../product-controller
      dockerfile: docker/Dockerfile
    container_name: product-controller
    ports:
      - "8088:8086"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Fulfillment Controller
  fulfillment-controller:
    build:
      context: ../fulfillment-controller
      dockerfile: docker/Dockerfile
    container_name: fulfillment-controller
    ports:
      - "8089:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Email Service
  email-service:
    build:
      context: ../email-service
      dockerfile: docker/Dockerfile
    container_name: email-service
    ports:
      - "8090:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-database:1521/oms;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_SQL_INIT_MODE=never
    command: ["java", "-jar", "/app/app.jar", "--spring.profiles.active=default"]
    depends_on:
      h2-database:
        condition: service_healthy
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Proxy
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "25000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./swagger-ui.html:/usr/share/nginx/html/swagger-ui.html
    depends_on:
      - inventory-controller
      - storesearch-controller
      - payment-service
      - shippingprice-controller
      - order-controller
      - product-controller
      - fulfillment-controller
      - email-service
    networks:
      - oms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  oms-network:
    driver: bridge

volumes:
  h2-data:
    driver: local